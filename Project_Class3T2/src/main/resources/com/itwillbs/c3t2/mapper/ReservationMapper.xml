<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.itwillbs.c3t2.mapper.ReservationMapper">
  	
	
	<!-- 예약 등록 -->
	<insert id="insertReservation">
		 INSERT INTO RESERVATION
			VALUES (
				null <!-- reservation_num -->
				, #{reservation_date}
				, #{reservation_time}
				, #{reservation_person_name}
				, #{reservation_person_count}
				, #{reservation_email}
				, 0 <!-- cancel -->
				, #{reservation_member_id} <!-- #{reservation_member_id} -->
				, #{reservation_guest_num} <!-- guest_num -->
				, (SELECT * 
					 FROM (SELECT *
							 FROM DINNING D
							WHERE dinning_max = #{cal_count}) D
				LEFT JOIN (SELECT *
							 FROM RESERVATION
							WHERE reservation_date = #{reservation_date}
							  AND reservation_time = #{reservation_time}) R
					   ON D.dinning_num = R.dinning_num)
				, 1 <!-- restaurant_num -->
		)
	</insert>
	
	<!-- 예약번호 불러오기 -->
	<select id="selectNameEmail" resultType="com.itwillbs.c3t2.vo.ReservationVO">
		SELECT reservation_guest_num 
		  FROM RESERVATION 
		 WHERE reservation_person_name = #{reservation_person_name} AND reservation_email = #{reservation_email} AND reservation_cancel = 0
	</select>
	
	<!-- 예약내역 불러오기 / 예약번호, 예약이메일 -->
	<select id="selectNumEmail" resultType="com.itwillbs.c3t2.vo.ReservationVO">
		SELECT * 
		  FROM RESERVATION 
		 WHERE reservation_guest_num = #{reservation_guest_num} AND reservation_email = #{reservation_email} AND reservation_cancel = 0
	</select>
	
	<!-- 예약 수정 -->
	<update id="updateReservation">
		UPDATE RESERVATION 
		   SET reservation_date = #{reservation_date}
			   , reservation_time = #{reservation_time}
			   , reservation_person_count = #{reservation_person_count}
			   , reservation_email = #{reservation_email}
		 WHERE reservation_guest_num = #{reservation_guest_num} 
		   AND reservation_person_name = #{reservation_person_name}
	</update>
	
	<!-- 예약 삭제 -->
	<update id="deleteReservation">
		UPDATE RESERVATION 
		   SET reservation_cancel = 1
		 WHERE reservation_guest_num = #{reservation_guest_num} 
		   AND reservation_person_name = #{reservation_person_name}
	</update>
	
	<!-- 예약내역 불러오기 / 예약번호, 이름 -->
	<select id="selectNumName" resultType="com.itwillbs.c3t2.vo.ReservationVO">
		SELECT *
		  FROM RESERVATION
		 WHERE reservation_guest_num = #{reservation_guest_num} 
		   AND reservation_person_name = #{reservation_person_name} 
		   AND reservation_cancel = 0
	</select>

	<!-- 예약 가능 시간 조회 -->
	<select id="selectDateCount" resultType="map">
		WITH TMP AS (
			SELECT *
			  FROM (SELECT A.RESERVATION_TIME
					  	 , A.NUM
					     , A.DINNING_MAX
					     , CASE WHEN A.NUM =  (SELECT GROUP_CONCAT(DINNING_NUM ORDER BY DINNING_NUM) AS NUM
											     FROM DINNING
					                            WHERE A.DINNING_MAX = DINNING_MAX
										  		GROUP BY DINNING_MAX)
			                 	THEN 'N'
			                 	ELSE 'Y' END AS AVAILABLE
			                 	
					  FROM (SELECT R.RESERVATION_TIME
							     , GROUP_CONCAT(R.DINNING_NUM ORDER BY R.DINNING_NUM) AS NUM 
					             , D.DINNING_MAX
							  FROM RESERVATION R
							  LEFT JOIN DINNING D
								ON R.DINNING_NUM = D.DINNING_NUM
							 WHERE RESERVATION_DATE = #{selectedDay}
							   AND DINNING_MAX = #{count}
							 GROUP BY R.RESERVATION_TIME, D.DINNING_MAX) A
					) A
			  WHERE AVAILABLE = 'N'
		) 
		SELECT reservation_time
	      FROM TMP
		 UNION 
	    SELECT CONCAT(reservation_time + 1, ":00")
	      FROM TMP  
	</select>
	
	<!-- 테이블 예약 가능 여부 -->
	<select id="selectDinningMax" resultType="map">
	SELECT DISTINCT DINNING_MAX
  	  FROM DINNING
	</select>
	
	<!-- 레스토랑 오픈/마감 시간 조회 -->
<!-- 	<select id="selectOpenClose" resultType="com.itwillbs.c3t2.vo.RestaurantVO"> -->
<!-- 		WITH RECURSIVE OCT AS ( -->
<!-- 				SELECT (select cast(substr(#{restaurant_open_time}, 1, 2) as unsigned)  -->
<!-- 						from RESTAURANT) AS NUM -->
<!-- 				UNION ALL -->
<!-- 				SELECT NUM + 1 FROM CTE -->
<!-- 				WHERE NUM &lt; (select cast(substr(#{restaurant_close_time}, 1, 2) as unsigned)  -->
<!-- 							   from RESTAURANT) -->
<!-- 			) -->
<!-- 		SELECT * FROM OCT -->
<!-- 	</select> -->

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    

<mapper namespace="com.itwillbs.c3t2.mapper.MyPageMapper">
	
    
	<!-- 회원상세정보 조회 -->
	<select id = "selectMemberDetails" resultType="com.itwillbs.c3t2.vo.MemberVO">
		SELECT*
		FROM MEMBER 
		WHERE member_id = #{member_id}
	</select>
	
	
	<!-- 특정 회원의 모든 리뷰를 조회 -->
	<select id="selectReviewDetail" resultType="com.itwillbs.c3t2.vo.ReviewVO">
	    SELECT r.*, m.member_name
	    FROM REVIEW r
	    JOIN MEMBER m ON r.member_id = m.member_id
	    WHERE r.member_id = #{member_id}
	</select>
	
	<!-- 상품 구매 내역 -->
	<select id="getOrderList" resultType="com.itwillbs.c3t2.vo.UserOrderVO">
       SELECT u.*, m.member_name
		FROM USER_ORDER u
		JOIN MEMBER m ON u.member_id = m.member_id
		WHERE u.member_id = #{member_id}
    </select>
	
	<!-- 장바구니 검색 SQL -->
	<sql id="cartSearchSql">
		
		<!-- 검색 유형이 null이 아닐 경우에만 검색 조건을 추가합니다. -->
	    <if test="searchType !=null">
	    
	    		<!-- 검색 유형이 'member_id'일 경우 -->
	            <if test="searchType == 'userid'.toString()">
	            	
	            	<!-- 사용자 ID에 키워드가 포함된 데이터를 검색합니다. -->
	                and member_id like CONCAT('%', #{keyword}, '%')
	            </if>
	     		
	     		<!-- 검색 유형이 'member_name'일 경우 -->
	            <if test="searchType == 'username'.toString()">
	                and member_name like CONCAT('%', #{keyword}, '%')
	            </if>
	     		
	     		<!-- 검색 유형이 'member_email'일 경우 -->
	            <if test="searchType == 'email'.toString()">
	                and member_email like CONCAT('%', #{keyword}, '%')
	            </if>
	            
	            <!-- 검색 유형이 'all'일 경우 -->
	            <if test="searchType == 'all'.toString()">
	                and ( 
	                     member_id like CONCAT('%', #{keyword}, '%')
	                    OR
	                     member_name like CONCAT('%', #{keyword}, '%')
	                    OR
	                     member_email like CONCAT('%', #{keyword}, '%')
	                )
	            </if>
	             
	    </if>
	</sql>
	
	
		<!-- 장바구니 전체 갯수 -->
	<select id="getCartTotalCount" resultType="int">
	    SELECT  count(*) FROM 
            CART C      
		JOIN 
            PRODUCT P ON C.product_num = P.product_num
        WHERE 
            C.member_id = #{member_id}
     </select>       
	
	
	
	<!-- 장바구니 목록 -->
	<select id="getCartList" resultType="com.itwillbs.c3t2.vo.CartVO">
	    SELECT 
            C.*,
            P.product_name,
            P.product_info,
            P.product_main_img_real_file
        FROM 
            CART C
        JOIN 
            PRODUCT P ON C.product_num = P.product_num
        WHERE 
            C.member_id = #{member_id}
            
  		ORDER BY regDate desc             
            limit #{pageMaker.pageStart}, #{pageMaker.perPageNum}            
     </select>       
	
	
	<!-- 찜목록 -->
	<select id="getFavorite" resultType="com.itwillbs.c3t2.vo.FavoriteVO">
        SELECT 
            F.favorite_num,
            F.member_id,
            F.product_num,
            P.product_name,
            P.product_main_img_real_file
        FROM 
            FAVORITE F
        JOIN 
            PRODUCT P ON F.product_num = P.product_num
        WHERE 
            F.member_id = #{member_id}
    </select>
    
    <!-- 찜목록 삭제-->
    <delete id="deleteFavorite">
       DELETE FROM FAVORITE WHERE favorite_num = #{favoriteNum}
    </delete>
    
    <!-- 예약 내역 -->
    <select id="getReservation" resultType="com.itwillbs.c3t2.vo.ReservationVO">
        SELECT 
            R.reservation_date,
            R.reservation_time,
            R.reservation_person_name,
            R.reservation_person_count,
            R.reservation_person_phone,
            R.dinning_num
        FROM 
            RESERVATION R
        JOIN 
            MEMBER M ON R.reservation_person_name = M.member_name
        WHERE 
            M.member_name = #{member_name}
    </select>
    

				
    <!-- 회원정보 수정 -->
    <update id="updateMember" parameterType="com.itwillbs.c3t2.vo.MemberVO">
   		UPDATE MEMBER
			SET 
			member_name=#{member_name}, 
			member_phone_num=#{member_phone_num},
			member_address= CONCAT(#{member_address1}, ' ', #{member_address2}) ,
			member_address1=#{member_address1},
			member_address2=#{member_address2}, 			
			member_e_mail=CONCAT(#{member_email1}, '@', #{member_email2})
		WHERE member_id=#{member_id}
    </update>
    
     <!--  비밀번호 업데이트 -->
    <update id="updatePassword">    
	    UPDATE `MEMBER`
			SET   member_passwd=#{password}
		WHERE member_id=#{memberId}
    </update>
    
    
    <!-- 회원 탈퇴사유 등록 -->
    <insert id="insertMbershipWithdrawal">    
	    INSERT INTO MEMBER_WITHDRAWAL_REASON
			( member_withdrawal_reason_num, member_withdrawal_reason_text)
		VALUES(#{select_num},#{select_text})
    </insert>
    
    
     <!-- 회원 탈퇴-->
    <delete id="deleteMemberOut">
      DELETE FROM `MEMBER` WHERE member_id=#{member_id} 
    </delete>
    

    
    
    
</mapper>